<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication
	layout="absolute" showStatusBar="false"
	creationComplete="onCreationComplete();"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:pages="com.adobe.lineup.views.pages.*"
	xmlns:comps="com.adobe.lineup.views.components.*">

	<mx:Style source="assets/silver_default.css" />

	<mx:Script>
		<![CDATA[
			import com.adobe.lineup.events.BoundsChangeEvent;
			import com.adobe.lineup.events.ActivateEvent;
			import com.adobe.lineup.events.ShutdownEvent;
			import com.adobe.lineup.events.NotificationCheckEvent;
			import com.adobe.lineup.events.InitEvent;
			import com.adobe.lineup.events.InvocationEvent;
		
			import com.adobe.lineup.controller.Controller;
			import com.adobe.lineup.events.GetAppointmentsEvent;
			import com.adobe.lineup.model.ModelLocator;
			
			private var controller:Controller;
			private var notificationTimer:Timer;
			private var appointmentUpdateTimer:Timer;
			private var appointmentCacheTimer:Timer;
			
			private function onCreationComplete():void
			{
				this.controller = new Controller();
				// Set up the notification timer
				this.notificationTimer = new Timer(60 * 1000); // Every minute
				this.notificationTimer.addEventListener(TimerEvent.TIMER,
					function(e:TimerEvent):void
					{
						new NotificationCheckEvent().dispatch();
					});
				this.notificationTimer.start();

				// Set up the appointment refresh timer
				this.appointmentUpdateTimer = new Timer(5 * 60 * 1000); // Every five minutes
				this.appointmentUpdateTimer.addEventListener(TimerEvent.TIMER,
					function(e:TimerEvent):void
					{
						var gae:GetAppointmentsEvent = new GetAppointmentsEvent();
						gae.startDate = new Date();
						gae.endDate = new Date();
						gae.updateUI = true;
						gae.dispatch();
					});
				this.appointmentUpdateTimer.start();

				// Timer for caching appintments a month out
				this.appointmentCacheTimer = new Timer(30 * 60 * 1000); // Every 30 minutes
				this.appointmentCacheTimer.addEventListener(TimerEvent.TIMER,
					function(e:TimerEvent):void
					{
						var gae:GetAppointmentsEvent = new GetAppointmentsEvent();
						gae.startDate = new Date();
						gae.endDate = new Date(gae.startDate.time + (60 * 60 * 24 * 30 * 1000)); // One month
						gae.updateUI = false;
						gae.dispatch();
					});
				this.appointmentCacheTimer.start();

				NativeApplication.nativeApplication.addEventListener(InvokeEvent.INVOKE,
					function(e:InvokeEvent):void
					{
						new InvocationEvent().dispatch();
					});

				NativeApplication.nativeApplication.addEventListener(Event.ACTIVATE,
					function(e:Event):void
					{
						new ActivateEvent().dispatch();
					});
				
				this.nativeWindow.addEventListener(NativeWindowBoundsEvent.MOVING,
					function(e:NativeWindowBoundsEvent):void
					{
						var bce:BoundsChangeEvent = new BoundsChangeEvent();
						bce.nativeWindowBoundsEvent = e;
						bce.dispatch();
					});
				
				NativeApplication.nativeApplication.addEventListener(Event.EXITING,
					function(e:Event):void
					{
						new ShutdownEvent().dispatch();
					});
				
				new InitEvent().dispatch();
			}
		]]>
	</mx:Script>

	<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalGap="0">

		<mx:HRule width="100%" strokeWidth="2" strokeColor="#B9B9B9" shadowColor="#FFFFFF"/>
	
		<pages:ViewSchedule label="View Schedule" width="100%" height="100%"/>

		<comps:ControlBar width="100%"/>

	</mx:VBox>

	<pages:ServerInfoDrawer id="serverConfig" width="400" height="250"/>

</mx:WindowedApplication>
